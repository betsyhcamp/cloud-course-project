{
  "openapi": "3.1.0",
  "info": {
    "title": "Files API",
    "summary": "Store and retrieve files and file metadata.",
    "description": "\n![Maintained by](https://img.shields.io/badge/Maintained_by-E_Camp-blue)\n\n\n[Project Github Repo](https://github.com/betsyhcamp/cloud-course-project)\n",
    "version": "v0"
  },
  "paths": {
    "/files/{file_path}": {
      "put": {
        "tags": [
          "Files"
        ],
        "summary": "Upload File",
        "description": "Upload a file.",
        "operationId": "Files--upload_file",
        "parameters": [
          {
            "name": "file_path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Path"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Files--upload_file"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutFileResponse"
                }
              }
            }
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutFileResponse"
                }
              }
            },
            "description": "Created"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "Files"
        ],
        "summary": "Get File Metadata",
        "description": "Retrieve file metadata.\n\nNote: by convention, HEAD requests MUST NOT return a body in the response.",
        "operationId": "Files--get_file_metadata",
        "parameters": [
          {
            "name": "file_path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "headers": {
              "Content-Type": {
                "description": "The MIME type",
                "example": "text/plain",
                "schema": {
                  "type": "string"
                }
              },
              "Content-Length": {
                "description": "The size of the file in bytes.",
                "example": 64,
                "schema": {
                  "type": "integer"
                }
              },
              "Last Modified": {
                "description": "The last date the file was modified.",
                "example": "Thu, 01 Jan2024 00:00:00 GMT",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "404": {
            "description": "File not found for the given `file_path`."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "Get File",
        "description": "Retrieve a file.",
        "operationId": "Files--get_file",
        "parameters": [
          {
            "name": "file_path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The file content.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "File not found for the given `file_path`."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Delete File",
        "description": "Delete a file.\n\nNOTE: DELETE requests MUST NOT return a body in the response.",
        "operationId": "Files--delete_file",
        "parameters": [
          {
            "name": "file_path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Path"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "File not found for the given `file_path`."
          },
          "204": {
            "description": "File deleted successfully."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/files": {
      "get": {
        "tags": [
          "Files"
        ],
        "summary": "List Files",
        "description": "List files with pagination.",
        "operationId": "Files--list_files",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 10,
              "default": 10,
              "title": "Page Size"
            }
          },
          {
            "name": "directory",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": "",
              "title": "Directory"
            }
          },
          {
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFilesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/files/generated/{file_path}": {
      "post": {
        "tags": [
          "Generated Files"
        ],
        "summary": "AI Generated Files",
        "description": "Generate a file using AI.\n\nNote: The generated file type is prescribed by the the `file_path` extension. So the `file_path`\nmust have an extension matching one of the supported file types.",
        "operationId": "Generated Files--generate_file_using_openai",
        "parameters": [
          {
            "name": "file_path",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Path"
            }
          },
          {
            "name": "prompt",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Prompt"
            }
          },
          {
            "name": "file_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/GeneratedFileType"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PutGeneratedFileResponse"
                },
                "examples": {
                  "text": {
                    "value": {
                      "file_path": "path/to/txt_file_example.txt",
                      "message": "New text file generated and uploaded at path: path/to/txt_file_example.txt"
                    }
                  },
                  "image": {
                    "value": {
                      "file_path": "path/to/image_file_example.png",
                      "message": "New text file generated and uploaded at path: path/to/image_file_example.png"
                    }
                  },
                  "text-to-speech": {
                    "value": {
                      "file_path": "path/to/speech.mp3",
                      "message": "New text file generated and uploaded at path: path/to/speech.mp3"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_Files--upload_file": {
        "properties": {
          "file_content": {
            "type": "string",
            "format": "binary",
            "title": "File Content"
          }
        },
        "type": "object",
        "required": [
          "file_content"
        ],
        "title": "Body_Files--upload_file"
      },
      "FileMetadata": {
        "properties": {
          "file_path": {
            "type": "string",
            "title": "File Path",
            "description": "The path of the file.",
            "example": "path/to/file_example.txt"
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "title": "Last Modified",
            "description": "The most recent timestamp the file was modified."
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes",
            "description": "The size of the file in bytes."
          }
        },
        "type": "object",
        "required": [
          "file_path",
          "last_modified",
          "size_bytes"
        ],
        "title": "FileMetadata",
        "description": "Metadata of a file."
      },
      "GeneratedFileType": {
        "type": "string",
        "enum": [
          "text",
          "image",
          "text-to-speech"
        ],
        "title": "GeneratedFileType",
        "description": "The type of file generated by OpenAI."
      },
      "GetFilesResponse": {
        "properties": {
          "files": {
            "items": {
              "$ref": "#/components/schemas/FileMetadata"
            },
            "type": "array",
            "title": "Files"
          },
          "next_page_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page Token"
          }
        },
        "type": "object",
        "required": [
          "files",
          "next_page_token"
        ],
        "title": "GetFilesResponse",
        "description": "Response model for `GET /files`.",
        "example": {
          "files": [
            {
              "file_path": "path/to/file_example.txt",
              "last_modified": "2022-01-01T00:00:00Z",
              "size_bytes": 125
            }
          ],
          "next_page_token": "next_page_token_example"
        }
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "PutFileResponse": {
        "properties": {
          "file_path": {
            "type": "string",
            "title": "File Path",
            "description": "The path of the file.",
            "example": "path/to/file_example.txt"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "A message about the operation."
          }
        },
        "type": "object",
        "required": [
          "file_path",
          "message"
        ],
        "title": "PutFileResponse",
        "description": "Response model for `PUT /files/:file_path`."
      },
      "PutGeneratedFileResponse": {
        "properties": {
          "file_path": {
            "type": "string",
            "title": "File Path",
            "description": "The path to the file.",
            "example": "path/to/example_file.txt"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "The message indicating the status of the operation.",
            "example": "New file generated and uploaded at path: path/to/example_file.txt"
          }
        },
        "type": "object",
        "required": [
          "file_path",
          "message"
        ],
        "title": "PutGeneratedFileResponse",
        "description": "Response model for `POST /files/generated/:file_path`.",
        "examples": [
          {
            "value": {
              "file_path": "path/to/txt_file_example.txt",
              "message": "New text file generated and uploaded at path: path/to/txt_file_example.txt"
            }
          },
          {
            "value": {
              "file_path": "path/to/image_file_example.png",
              "message": "New text file generated and uploaded at path: path/to/image_file_example.png"
            }
          },
          {
            "value": {
              "file_path": "path/to/speech.mp3",
              "message": "New text file generated and uploaded at path: path/to/speech.mp3"
            }
          }
        ]
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}